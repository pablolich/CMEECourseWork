my_data <- data.frame(x = x, y = y)
# perform a linear regression
my_lm <- summary(lm(y ~ x, data = my_data))
# plot the data
p <-  ggplot(my_data, aes(x = x, y = y,
colour = abs(my_lm$residual))
) +
geom_point() +
scale_colour_gradient(low = "black", high = "red") +
theme(legend.position = "none") +
scale_x_continuous(
expression(alpha^2 * pi / beta * sqrt(Theta)))
# add the regression line
p <- p + geom_abline(
intercept = my_lm$coefficients[1][1],
slope = my_lm$coefficients[2][1],
colour = "red")
# throw some math on the plot
p <- p + geom_text(aes(x = 60, y = 0,
label = "sqrt(alpha) * 2* pi"),
parse = TRUE, size = 6,
colour = "blue")
pdf("../Results/MyLinReg.pdf")
print(p)
graphics.off()
a <- read.table("../Data/Results.txt", header = TRUE)
head(a)
a$ymin <- rep(0, dim(a)[1]) # append a column of zeros
require(ggplot2)
# Print the first linerange
p <- ggplot(a)
p <- p + geom_linerange(data = a, aes(
x = x,
ymin = ymin,
ymax = y1,
size = (0.5)
),
colour = "#E69F00",
alpha = 1/2, show.legend = FALSE)
# Print the second linerange
p <- p + geom_linerange(data = a, aes(
x = x,
ymin = ymin,
ymax = y2,
size = (0.5)
),
colour = "#56B4E9",
alpha = 1/2, show.legend = FALSE)
# Print the third linerange:
p <- p + geom_linerange(data = a, aes(
x = x,
ymin = ymin,
ymax = y3,
size = (0.5)
),
colour = "#D55E00",
alpha = 1/2, show.legend = FALSE)
# Annotate the plot with labels:
p <- p + geom_text(data = a, aes(x = x, y = -500, label = Label))
# now set the axis labels, remove the legend, and prepare for bw printing
p <- p + scale_x_continuous("My x axis",
breaks = seq(3, 5, by = 0.05)) +
scale_y_continuous("My y axis") +
theme_bw() +
theme(legend.position = "none")
pdf("../Results/MyBars.pdf")
print(p)
graphics.off()
rm(list = ls())
MyDF <- read.csv("../data/EcolArchives-E089-51-D1.csv")
#Get indexes of positions where units are in mg
ind = which(MyDF$Prey.mass.unit == 'mg')
MyDF$Prey.mass[ind] = MyDF$Prey.mass[ind]/1000
require(plyr)
table = ddply(MyDF, .(Type.of.feeding.interaction, Predator.lifestage), summarize,
prey.mass = Prey.mass, predator.mass = Predator.mass)
ggplot(MyDF, aes(MyDF$Prey.mass, MyDF$Predator.mass)) + geom_point() + facet_grid(~ Variety)
ggplot(MyDF, aes(MyDF$Prey.mass, MyDF$Predator.mass)) + geom_point() + facet_grid(~ MyDF$Type.of.feeding.interaction)
rm(list = ls())
MyDF <- read.csv("../data/EcolArchives-E089-51-D1.csv")
#Get indexes of positions where units are in mg
ind = which(MyDF$Prey.mass.unit == 'mg')
MyDF$Prey.mass[ind] = MyDF$Prey.mass[ind]/1000
require(plyr)
table = ddply(MyDF, .(Type.of.feeding.interaction, Predator.lifestage), summarize,
prey.mass = Prey.mass, predator.mass = Predator.mass)
ggplot(MyDF, aes(log(MyDF$Prey.mass), log(MyDF$Predator.mass))) + geom_point() + facet_grid(~ MyDF$Type.of.feeding.interaction)
rm(list = ls())
MyDF <- read.csv("../data/EcolArchives-E089-51-D1.csv")
#Get indexes of positions where units are in mg
ind = which(MyDF$Prey.mass.unit == 'mg')
MyDF$Prey.mass[ind] = MyDF$Prey.mass[ind]/1000
require(plyr)
table = ddply(MyDF, .(Type.of.feeding.interaction, Predator.lifestage), summarize,
prey.mass = Prey.mass, predator.mass = Predator.mass)
ggplot(MyDF, aes(log(MyDF$Prey.mass), log(MyDF$Predator.mass))) +
geom_point() +
facet_grid(~ MyDF$Type.of.feeding.interaction)
help('grid.arrange')
install.packages("gridExtra")
rm(list = ls())
MyDF <- read.csv("../data/EcolArchives-E089-51-D1.csv")
#Get indexes of positions where units are in mg
ind = which(MyDF$Prey.mass.unit == 'mg')
MyDF$Prey.mass[ind] = MyDF$Prey.mass[ind]/1000
require(plyr)
require(ggplot2)
require(gridExtra)
table = ddply(MyDF, .(Type.of.feeding.interaction, Predator.lifestage), summarize,
prey.mass = Prey.mass, predator.mass = Predator.mass)
ggplot(MyDF, aes(log(MyDF$Prey.mass), log(MyDF$Predator.mass))) +
geom_point() +
facet_grid(~ MyDF$Type.of.feeding.interaction)
rm(list = ls())
MyDF <- read.csv("../data/EcolArchives-E089-51-D1.csv")
#Get indexes of positions where units are in mg
ind = which(MyDF$Prey.mass.unit == 'mg')
MyDF$Prey.mass[ind] = MyDF$Prey.mass[ind]/1000
require(plyr)
require(ggplot2)
require(gridExtra)
table = ddply(MyDF, .(Type.of.feeding.interaction, Predator.lifestage), summarize,
prey.mass = Prey.mass, predator.mass = Predator.mass)
ggplot(MyDF, aes(log(MyDF$Prey.mass), log(MyDF$Predator.mass))) +
geom_point() +
facet_grid(MyDF$Type.of.feeding.interaction ~)
rm(list = ls())
MyDF <- read.csv("../data/EcolArchives-E089-51-D1.csv")
#Get indexes of positions where units are in mg
ind = which(MyDF$Prey.mass.unit == 'mg')
MyDF$Prey.mass[ind] = MyDF$Prey.mass[ind]/1000
require(plyr)
require(ggplot2)
require(gridExtra)
table = ddply(MyDF, .(Type.of.feeding.interaction, Predator.lifestage), summarize,
prey.mass = Prey.mass, predator.mass = Predator.mass)
ggplot(MyDF, aes(log(MyDF$Prey.mass), log(MyDF$Predator.mass))) +
geom_point() +
facet_grid(~ MyDF$Type.of.feeding.interaction)
rm(list = ls())
MyDF <- read.csv("../data/EcolArchives-E089-51-D1.csv")
#Get indexes of positions where units are in mg
ind = which(MyDF$Prey.mass.unit == 'mg')
MyDF$Prey.mass[ind] = MyDF$Prey.mass[ind]/1000
require(plyr)
require(ggplot2)
require(gridExtra)
table = ddply(MyDF, .(Type.of.feeding.interaction, Predator.lifestage), summarize,
prey.mass = Prey.mass, predator.mass = Predator.mass)
ggplot(MyDF, aes(log(MyDF$Prey.mass), log(MyDF$Predator.mass))) +
geom_point() +
facet_grid(MyDF$Type.of.feeding.interaction ~)
rm(list = ls())
MyDF <- read.csv("../data/EcolArchives-E089-51-D1.csv")
#Get indexes of positions where units are in mg
ind = which(MyDF$Prey.mass.unit == 'mg')
MyDF$Prey.mass[ind] = MyDF$Prey.mass[ind]/1000
require(plyr)
require(ggplot2)
require(gridExtra)
table = ddply(MyDF, .(Type.of.feeding.interaction, Predator.lifestage), summarize,
prey.mass = Prey.mass, predator.mass = Predator.mass)
ggplot(MyDF, aes(log(MyDF$Prey.mass), log(MyDF$Predator.mass))) +
geom_point() +
facet_grid(MyDF$Type.of.feeding.interaction~)
?grid.arrange
?grobs
rm(list = ls())
MyDF <- read.csv("../data/EcolArchives-E089-51-D1.csv")
#Get indexes of positions where units are in mg
ind = which(MyDF$Prey.mass.unit == 'mg')
MyDF$Prey.mass[ind] = MyDF$Prey.mass[ind]/1000
require(plyr)
require(ggplot2)
require(gridExtra)
table = ddply(MyDF, .(Type.of.feeding.interaction, Predator.lifestage), summarize,
prey.mass = Prey.mass, predator.mass = Predator.mass)
g1 = ggplot(MyDF, aes(log(MyDF$Prey.mass), log(MyDF$Predator.mass))) +
geom_point() +
facet_grid(~ MyDF$Type.of.feeding.interaction)
g1
g1
grid.arrange(g1, ncol = 1)
grid.arrange(g1, nrow = 1)
install.packages("cowplot")
require(cowplot)
plot_grid(g1 nrow = 1)
rm(list = ls())
MyDF <- read.csv("../data/EcolArchives-E089-51-D1.csv")
#Get indexes of positions where units are in mg
ind = which(MyDF$Prey.mass.unit == 'mg')
MyDF$Prey.mass[ind] = MyDF$Prey.mass[ind]/1000
require(plyr)
require(ggplot2)
require(gridExtra)
require(cowplot)
table = ddply(MyDF, .(Type.of.feeding.interaction, Predator.lifestage), summarize,
prey.mass = Prey.mass, predator.mass = Predator.mass)
g1 = ggplot(MyDF, aes(log(MyDF$Prey.mass), log(MyDF$Predator.mass))) +
geom_point() +
facet_grid(~ MyDF$Type.of.feeding.interaction)
plot_grid(g1 nrow = 1)
rm(list = ls())
MyDF <- read.csv("../data/EcolArchives-E089-51-D1.csv")
#Get indexes of positions where units are in mg
ind = which(MyDF$Prey.mass.unit == 'mg')
MyDF$Prey.mass[ind] = MyDF$Prey.mass[ind]/1000
require(plyr)
require(ggplot2)
require(gridExtra)
require(cowplot)
table = ddply(MyDF, .(Type.of.feeding.interaction, Predator.lifestage), summarize,
prey.mass = Prey.mass, predator.mass = Predator.mass)
g1 = ggplot(MyDF, aes(log(MyDF$Prey.mass), log(MyDF$Predator.mass))) +
geom_point() +
facet_grid(~ MyDF$Type.of.feeding.interaction)
plot_grid(g1, nrow = 1)
rm(list = ls())
MyDF <- read.csv("../data/EcolArchives-E089-51-D1.csv")
#Get indexes of positions where units are in mg
ind = which(MyDF$Prey.mass.unit == 'mg')
MyDF$Prey.mass[ind] = MyDF$Prey.mass[ind]/1000
require(plyr)
require(ggplot2)
require(gridExtra)
require(cowplot)
table = ddply(MyDF, .(Type.of.feeding.interaction, Predator.lifestage), summarize,
prey.mass = Prey.mass, predator.mass = Predator.mass)
g1 = ggplot(MyDF, aes(log(MyDF$Prey.mass), log(MyDF$Predator.mass))) +
geom_point() +
facet_grid(~ MyDF$Type.of.feeding.interaction)
plot_grid(g1, ncol = 1)
rm(list = ls())
MyDF <- read.csv("../data/EcolArchives-E089-51-D1.csv")
#Get indexes of positions where units are in mg
ind = which(MyDF$Prey.mass.unit == 'mg')
MyDF$Prey.mass[ind] = MyDF$Prey.mass[ind]/1000
require(plyr)
require(ggplot2)
require(gridExtra)
require(cowplot)
table = ddply(MyDF, .(Type.of.feeding.interaction, Predator.lifestage), summarize,
prey.mass = Prey.mass, predator.mass = Predator.mass)
g1 = ggplot(MyDF, aes(log(MyDF$Prey.mass), log(MyDF$Predator.mass))) +
geom_point() +
facet_grid(~ MyDF$Type.of.feeding.interaction)
plot_grid(g1, ncol = 1)
g1 = ggplot(MyDF, aes(log(MyDF$Prey.mass), log(MyDF$Predator.mass))) +
geom_point() +
facet_grid(~ MyDF$Type.of.feeding.interaction, rows = 5, cols = 1)
rm(list = ls())
MyDF <- read.csv("../data/EcolArchives-E089-51-D1.csv")
#Get indexes of positions where units are in mg
ind = which(MyDF$Prey.mass.unit == 'mg')
MyDF$Prey.mass[ind] = MyDF$Prey.mass[ind]/1000
require(plyr)
require(ggplot2)
require(gridExtra)
require(cowplot)
table = ddply(MyDF, .(Type.of.feeding.interaction, Predator.lifestage), summarize,
prey.mass = Prey.mass, predator.mass = Predator.mass)
g1 = ggplot(MyDF, aes(log(MyDF$Prey.mass), log(MyDF$Predator.mass))) +
geom_point() +
facet_grid(~ MyDF$Type.of.feeding.interaction, rows = 5, cols = 1)
plot_grid(g1, ncol = 1)
rm(list = ls())
MyDF <- read.csv("../data/EcolArchives-E089-51-D1.csv")
#Get indexes of positions where units are in mg
ind = which(MyDF$Prey.mass.unit == 'mg')
MyDF$Prey.mass[ind] = MyDF$Prey.mass[ind]/1000
require(plyr)
require(ggplot2)
require(gridExtra)
require(cowplot)
table = ddply(MyDF, .(Type.of.feeding.interaction, Predator.lifestage), summarize,
prey.mass = Prey.mass, predator.mass = Predator.mass)
g1 = ggplot(MyDF, aes(log(MyDF$Prey.mass), log(MyDF$Predator.mass))) +
geom_point() +
facet_grid(~ MyDF$Type.of.feeding.interaction, rows = 5, cols = 1)
g1
rm(list = ls())
MyDF <- read.csv("../data/EcolArchives-E089-51-D1.csv")
#Get indexes of positions where units are in mg
ind = which(MyDF$Prey.mass.unit == 'mg')
MyDF$Prey.mass[ind] = MyDF$Prey.mass[ind]/1000
require(plyr)
require(ggplot2)
require(gridExtra)
require(cowplot)
table = ddply(MyDF, .(Type.of.feeding.interaction, Predator.lifestage), summarize,
prey.mass = Prey.mass, predator.mass = Predator.mass)
g1 = ggplot(MyDF, aes(log(MyDF$Prey.mass), log(MyDF$Predator.mass))) +
geom_point() +
facet_grid(~ MyDF$Type.of.feeding.interaction, vars(rows = 5, cols = 1))
g1
p <- ggplot(mtcars, aes(wt, disp)) + geom_point()
p + facet_wrap(vars(vs, am))
# vars() makes it easy to pass variables from wrapper functions:
wrap_by <- function(...) {
facet_wrap(vars(...), labeller = label_both)
}
p + wrap_by(vs)p + wrap_by(vs, am)
# You can also supply expressions to vars(). In this case it's often a
# good idea to supply a name as well:
p + wrap_by(drat = cut_number(drat, 3))
# Let's create another function for cutting and wrapping a
# variable. This time it will take a named argument instead of dots,
# so we'll have to use the "enquote and unquote" pattern:
wrap_cut <- function(var, n = 3) {
# Let's enquote the named argument `var` to make it auto-quoting:
var <- enquo(var)
# `quo_name()` will create a nice default name:
nm <- quo_name(var)
# Now let's unquote everything at the right place. Note that we also
# unquote `n` just in case the data frame has a column named
# `n`. The latter would have precedence over our local variable
# because the data is always masking the environment.
wrap_by(!!nm := cut_number(!!var, !!n))
}
# Thanks to tidy eval idioms we now have another useful wrapper:
p + wrap_cut(drat)
vs
g1 = ggplot(MyDF, aes(log(MyDF$Prey.mass), log(MyDF$Predator.mass))) +
geom_point() +
facet_grid(~ MyDF$Type.of.feeding.interaction, rows = 5, cols = 1)
rm(list = ls())
MyDF <- read.csv("../data/EcolArchives-E089-51-D1.csv")
#Get indexes of positions where units are in mg
ind = which(MyDF$Prey.mass.unit == 'mg')
MyDF$Prey.mass[ind] = MyDF$Prey.mass[ind]/1000
require(plyr)
require(ggplot2)
require(gridExtra)
require(cowplot)
table = ddply(MyDF, .(Type.of.feeding.interaction, Predator.lifestage), summarize,
prey.mass = Prey.mass, predator.mass = Predator.mass)
g1 = ggplot(MyDF, aes(log(MyDF$Prey.mass), log(MyDF$Predator.mass))) +
geom_point() +
facet_grid(~ MyDF$Type.of.feeding.interaction, rows = 5, cols = 1)
g1
rm(list = ls())
MyDF <- read.csv("../data/EcolArchives-E089-51-D1.csv")
#Get indexes of positions where units are in mg
ind = which(MyDF$Prey.mass.unit == 'mg')
MyDF$Prey.mass[ind] = MyDF$Prey.mass[ind]/1000
require(plyr)
require(ggplot2)
require(gridExtra)
require(cowplot)
table = ddply(MyDF, .(Type.of.feeding.interaction, Predator.lifestage), summarize,
prey.mass = Prey.mass, predator.mass = Predator.mass)
ggplot(MyDF, aes(log(MyDF$Prey.mass), log(MyDF$Predator.mass))) +
geom_point() +
facet_grid(~ MyDF$Type.of.feeding.interaction, rows = 5, cols = 1)
rm(list = ls())
MyDF <- read.csv("../data/EcolArchives-E089-51-D1.csv")
#Get indexes of positions where units are in mg
ind = which(MyDF$Prey.mass.unit == 'mg')
MyDF$Prey.mass[ind] = MyDF$Prey.mass[ind]/1000
require(plyr)
require(ggplot2)
require(gridExtra)
require(cowplot)
table = ddply(MyDF, .(Type.of.feeding.interaction, Predator.lifestage), summarize,
prey.mass = Prey.mass, predator.mass = Predator.mass)
ggplot(MyDF, aes(log(MyDF$Prey.mass), log(MyDF$Predator.mass))) +
geom_point() +
facet_wrap(~ MyDF$Type.of.feeding.interaction, rows = 5, cols = 1)
p <- ggplot(mtcars, aes(wt, disp)) + geom_point()
vars(vs,am)
p <- ggplot(mpg, aes(displ, cty)) + geom_point()
# Use vars() to supply variables from the dataset:
p + facet_grid(rows = vars(drv))p + facet_grid(cols = vars(cyl))p + facet_grid(vars(drv), vars(cyl))
# The historical formula interface is also available:
p + facet_grid(. ~ cyl)p + facet_grid(drv ~ .)p + facet_grid(drv ~ cyl)
# To change plot order of facet grid,
# change the order of variable levels with factor()
# If you combine a facetted dataset with a dataset that lacks those
# faceting variables, the data will be repeated across the missing
# combinations:
df <- data.frame(displ = mean(mpg$displ), cty = mean(mpg$cty))
p +
facet_grid(cols = vars(cyl)) +
geom_point(data = df, colour = "red", size = 2)
# Free scales -------------------------------------------------------
# You can also choose whether the scales should be constant
# across all panels (the default), or whether they should be allowed
# to vary
mt <- ggplot(mtcars, aes(mpg, wt, colour = factor(cyl))) +
geom_point()
mt + facet_grid(. ~ cyl, scales = "free")
# If scales and space are free, then the mapping between position
# and values in the data will be the same across all panels. This
# is particularly useful for categorical axes
ggplot(mpg, aes(drv, model)) +
geom_point() +
facet_grid(manufacturer ~ ., scales = "free", space = "free") +
theme(strip.text.y = element_text(angle = 0))
# Margins ----------------------------------------------------------
# Margins can be specified logically (all yes or all no) or for specific
# variables as (character) variable names
mg <- ggplot(mtcars, aes(x = mpg, y = wt)) + geom_point()
mg + facet_grid(vs + am ~ gear, margins = TRUE)mg + facet_grid(vs + am ~ gear, margins = "am")# when margins are made over "vs", since the facets for "am" vary
# within the values of "vs", the marginal facet for "vs" is also
# a margin over "am".
mg + facet_grid(vs + am ~ gear, margins = "vs")
p <- ggplot(mpg, aes(displ, cty)) + geom_point()
# Use vars() to supply variables from the dataset:
p + facet_grid(rows = vars(drv))p + facet_grid(cols = vars(cyl))p + facet_grid(vars(drv), vars(cyl))
# Use vars() to supply variables from the dataset:
p + facet_grid(rows = vars(drv))p + facet_grid(cols = vars(cyl))p + facet_grid(vars(drv), vars(cyl))
p <- ggplot(mpg, aes(displ, cty)) + geom_point()
p <- ggplot(mpg, aes(displ, cty)) + geom_point()
# Use vars() to supply variables from the dataset:
p + facet_grid(rows = vars(drv))p + facet_grid(cols = vars(cyl)) + facet_grid(vars(drv), vars(cyl))
p <- ggplot(mpg, aes(displ, cty)) + geom_point()
p + facet_grid(rows = vars(drv))
vars(drv)
mpg
rm(list = ls())
MyDF <- read.csv("../data/EcolArchives-E089-51-D1.csv")
#Get indexes of positions where units are in mg
ind = which(MyDF$Prey.mass.unit == 'mg')
MyDF$Prey.mass[ind] = MyDF$Prey.mass[ind]/1000
require(plyr)
require(ggplot2)
require(gridExtra)
require(cowplot)
table = ddply(MyDF, .(Type.of.feeding.interaction, Predator.lifestage), summarize,
prey.mass = Prey.mass, predator.mass = Predator.mass)
ggplot(MyDF, aes(log(MyDF$Prey.mass), log(MyDF$Predator.mass))) +
geom_point() +
facet_wrap(~ MyDF$Type.of.feeding.interaction, rows = vars(MyDF$Type.of.feeding.interaction))
MyDF
type(MyDF)
class(MyDF)
class(mpg)
mpg
rm(list = ls())
MyDF <- read.csv("../data/EcolArchives-E089-51-D1.csv")
#Get indexes of positions where units are in mg
ind = which(MyDF$Prey.mass.unit == 'mg')
MyDF$Prey.mass[ind] = MyDF$Prey.mass[ind]/1000
require(plyr)
require(ggplot2)
require(gridExtra)
require(cowplot)
table = ddply(MyDF, .(Type.of.feeding.interaction, Predator.lifestage), summarize,
prey.mass = Prey.mass, predator.mass = Predator.mass)
ggplot(MyDF, aes(log(MyDF$Prey.mass), log(MyDF$Predator.mass))) +
geom_point() +
facet_wrap(~ MyDF$Type.of.feeding.interaction, rows = vars(MyDF$Prey.mass))
rm(list = ls())
MyDF <- read.csv("../data/EcolArchives-E089-51-D1.csv")
#Get indexes of positions where units are in mg
ind = which(MyDF$Prey.mass.unit == 'mg')
MyDF$Prey.mass[ind] = MyDF$Prey.mass[ind]/1000
require(plyr)
require(ggplot2)
require(gridExtra)
require(cowplot)
table = ddply(MyDF, .(Type.of.feeding.interaction, Predator.lifestage), summarize,
prey.mass = Prey.mass, predator.mass = Predator.mass)
ggplot(MyDF, aes(log(MyDF$Prey.mass), log(MyDF$Predator.mass))) +
geom_point() +
facet_grid(~ MyDF$Type.of.feeding.interaction, rows = vars(MyDF$Prey.mass))
ggplot(MyDF, aes(log(MyDF$Prey.mass), log(MyDF$Predator.mass))) +
geom_point() +
facet_grid(~ MyDF$Type.of.feeding.interaction, rows = vars(MyDF$Predator.mass))
rm(list = ls())
MyDF <- read.csv("../data/EcolArchives-E089-51-D1.csv")
#Get indexes of positions where units are in mg
ind = which(MyDF$Prey.mass.unit == 'mg')
MyDF$Prey.mass[ind] = MyDF$Prey.mass[ind]/1000
require(plyr)
require(ggplot2)
require(gridExtra)
require(cowplot)
table = ddply(MyDF, .(Type.of.feeding.interaction, Predator.lifestage), summarize,
prey.mass = Prey.mass, predator.mass = Predator.mass)
ggplot(MyDF, aes(log(MyDF$Prey.mass), log(MyDF$Predator.mass))) +
geom_point() +
facet_grid(~ MyDF$Type.of.feeding.interaction, rows = vars(MyDF$Predator.mass))
vars(MyDF$Predator.mass)
rm(list = ls())
MyDF <- read.csv("../data/EcolArchives-E089-51-D1.csv")
#Get indexes of positions where units are in mg
ind = which(MyDF$Prey.mass.unit == 'mg')
MyDF$Prey.mass[ind] = MyDF$Prey.mass[ind]/1000
require(plyr)
require(ggplot2)
require(gridExtra)
require(cowplot)
table = ddply(MyDF, .(Type.of.feeding.interaction, Predator.lifestage), summarize,
prey.mass = Prey.mass, predator.mass = Predator.mass)
ggplot(MyDF, aes(log(MyDF$Prey.mass), log(MyDF$Predator.mass))) +
geom_point() +
facet_grid( rows = vars(MyDF$Predator.mass))
rm(list = ls())
MyDF <- read.csv("../data/EcolArchives-E089-51-D1.csv")
#Get indexes of positions where units are in mg
ind = which(MyDF$Prey.mass.unit == 'mg')
MyDF$Prey.mass[ind] = MyDF$Prey.mass[ind]/1000
require(plyr)
require(ggplot2)
require(gridExtra)
require(cowplot)
table = ddply(MyDF, .(Type.of.feeding.interaction, Predator.lifestage), summarize,
prey.mass = Prey.mass, predator.mass = Predator.mass)
ggplot(MyDF, aes(log(MyDF$Prey.mass), log(MyDF$Predator.mass))) +
geom_point() +
facet_grid(rows = vars(MyDF$Predator.mass))
