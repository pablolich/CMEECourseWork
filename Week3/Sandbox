#Plotting for data explorations. 
#Data on Consumer-Resource (e.g, Predator-Prey) body mass
#ratios taken from the Ecological Archives of the ESA
#(Barnes et al. 2008, Ecology 89:881)

MyDF <- read.csv("../Data/EcolArchives-E089-51-D1.csv")
dim(MyDF)
#We don't like this plot, it is not informative
plot(MyDF$Predator.mass, MyDF$Prey.mass)
#Lets change the scale
plot(log(MyDF$Predator.mass), log(MyDF$Prey.mass))
#Specifiying the plot characters using pch
plot(log(MyDF$Predator.mass), log(MyDF$Prey.mass), pch = 20)
#Add labels
plot(log(MyDF$Predator.mass), log(MyDF$Prey.massss), pch = 20, xlab = 'Predator Mass (g)', 
     ylab = 'Prey Mass (g)')
#Histogram variables
hist(MyDF$Predator.mass)
hist(log(MyDF$Predator.mass), xlab = 'Predator Mass (g)', ylab = 'Count')
#Make it more beautiful
#Labels in bold, and bigger
par(font.lab = 2, cex.lab = 1.5)
#Common x axis in the histogram
breaks = seq(-24,13)
h1 <- hist(log(MyDF$Predator.mass),main = "Predator mass histogram", xlab = "Predator Mass (g)", ylab = "Count", 
     col = "lightblue", border = 'pink', breaks = breaks)
h2 <- hist(log(MyDF$Prey.mass), main = "Prey mass histogram", xlab = "Predator Mass (g)", ylab = "Count", 
     col = "lightblue", border = 'pink',breaks = breaks)

#Subplots
#set breaks
sh1 = hist(log10(MyDF$Predator.mass))
sh2 = hist(log10(MyDF$Prey.mass))
graphics.off()
#First indexes of non zero elements on both histograms
print(sh1$breaks)
print(sh2$breaks)
#Subsequent figures will be drawn in an nr-by-nc array on the device by columns (mfcol) 
#or rows (mfrows), respectively
par(mfcol = c(2,1), font.lab = 2)
#Setting common breaks for both subplots in an automatic way, so we don't cut out any data. 
breaks = seq(min(sh1$breaks, sh2$breaks), 
             max(tail(sh1$breaks, n = 1), tail(sh2$breaks, n = 1))) 
#i and j in mfg = c(i, j) indicate which figure in an array of figures is to be drawn next
par(mfg = c(1,1))
#Draw the first one
sh1 <- hist(log10(MyDF$Predator.mass),
     main = "Predator",
     xlab = "log10(Predator Mass (g))", ylab = "Count", col = "lightblue", border = "pink", 
    breaks = breaks) # Add title


par(mfg = c(2,1))
sh2 <- hist(log10(MyDF$Prey.mass),
     main = "Prey",
     xlab = "log10(Predator Mass (g))", ylab = "Count", col = "lightblue", border = "pink", 
     breaks = breaks) # Add title

graphics.off()

#Overlaying plots

#Some parameters
par(font.lab = 2, cex.lab = 1.5)

hist(log10(MyDF$Predator.mass), # Predator histogram
     xlab="log10(Body Mass (g))", ylab="Count", 
     col = rgb(0, .8,.9 , 0.5), # Note 'rgb', fourth value is transparency
     main = "Predator-prey size Overlap", breaks = breaks) 
hist(log10(MyDF$Prey.mass), col = rgb(0, .9, .3, 0.5), add = T, breaks = breaks) # Plot prey
legend('topleft',c('Predators','Prey'),   # Add legend
       fill=c(rgb(0, .8, .9, 0.5), rgb(0, .9, .3, 0.5))) # Define legend colors

graphics.off()

#Boxplot

boxplot(log10(MyDF$Predator.mass),
        main = "Predator mass",
        xlab = "Location", ylab = "log10(Predator Mass)")

#Now let's see how many locations the data are from:

#	a formula, such as y ~ grp, where y is a numeric vector of data values to be split 
#into groups according to the grouping variable grp
boxplot(log(MyDF$Predator.mass) ~ MyDF$Location, 
        main = "Predator mass by location",
        xlab = "Location", ylab = "Predator Mass")

#let's try boxplots by feeding interaction type:

boxplot(log(MyDF$Predator.mass) ~ MyDF$Type.of.feeding.interaction,
        main = "Predator mass by feeding interaction type",
        xlab = "Location", ylab = "Predator Mass")

#Combining plot types

# Specify figure size as proportionwith (x1, y1) = (0, 0) being the lower-left corner and 
#(x2, y2) = (1, 1) being the upper-right corner.
par(fig=c(0,0.8,0,0.8)) 
plot(log(MyDF$Predator.mass),log(MyDF$Prey.mass), 
     xlab = "Predator Mass (g)", ylab = "Prey Mass (g)") # Add labels
par(fig=c(0,0.8,0.47,1), new=TRUE)
boxplot(log(MyDF$Predator.mass), horizontal=TRUE, axes=FALSE)
par(fig=c(0.55,1,0,0.8),new=TRUE)
boxplot(log(MyDF$Prey.mass), axes=FALSE)
#mtext:
#side; on which side of the plot (1=bottom, 2=left, 3=top, 4=right).
#outer; use outer margins if available.
#line; on which MARgin line, starting at 0 counting outwards.
mtext("Fancy Predator-prey scatterplot", side=3, outer=TRUE, line=-10) 

graphics.off()

#Lattice plots

library(lattice)
densityplot(~log(Predator.mass) | Type.of.feeding.interaction, data=MyDF)

graphics.off()

#Saving your plots

pdf("../results/Pred_Prey_Overlay.pdf", # Open blank pdf page using a relative path
    11.7, 8.3) # These numbers are page dimensions in inches (these are actually A4 paper measures )

#Some parameters
par(font.lab = 2, cex.lab = 1.5)

hist(log10(MyDF$Predator.mass), # Predator histogram
     xlab="log10(Body Mass (g))", ylab="Count", 
     col = rgb(0, .8,.9 , 0.5), # Note 'rgb', fourth value is transparency
     main = "Predator-prey size Overlap", breaks = breaks) 
hist(log10(MyDF$Prey.mass), col = rgb(0, .9, .3, 0.5), add = T, breaks = breaks) # Plot prey
legend('topleft',c('Predators','Prey'),   # Add legend
       fill=c(rgb(0, .8, .9, 0.5), rgb(0, .9, .3, 0.5))) # Define legend colors

graphics.off()
















