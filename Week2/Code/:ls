#!/usr/bin/env python3 

__appname__ = '[oaks_debugme.py]'
__author__ = 'Pablo Lechon (plechon@ucm.es)'
__version__ = '0.0.1'

## IMPORTS ##

import csv
import sys
import doctest
from itertools import permutations
import warnings

## CONSTANTS ##


## FUNCTIONS ##

def is_an_oak(name):
    """ Returns True if name is starts with 'quercus'
    
    >>> is_an_oak('quercus robur')
    True

    >>> is_an_oak('Quercus robur')
    True

    >>> is_an_oak('Quercuss robur')
    False

    >>> is_an_oak('Fagus sylvatica')
    False

    """

    #Generate a list of possible typos by permuting every character and 
    #doubling it
#    _str = 'qquercuss'
#    _str2 = 'quercus'
#    perm_str = permutations(list(_str))
#    perm_str2 = permutations(list(_str2))
#    list1 = [i for i in perm_str]
#    list2 = [i for i in perm_str2]
#    listone = [''.join(i) for i in list1]
#    listtwo = [''.join(i) for i in list2]
#    #List of possible typos (pretty long)
#    listtot = listone + listtwo
    for i in listtot:
        if name.lower().startswith(i):
            name = 'quercus'
    _bool = name.lower().startswith('quercus')
    if name.lower().startswith('quercus'):
        return True
    else:
        return False

def select_range(_list, _range, value):
    '''Select a range of elements in a list around a center value

    Keyword arguments:

    '''

    try:
        ind = _list.index(value)
        #Selection of elements
        l = list[
    except ValueError:
        print('The value', value, 'is not in ', _list)
def auto_corretor(actual, attempt, tol):
    '''Rewrite 'attempt' string as 'actual' string if they are similar'''
    #Separate each character into a list
    l_attempt = list(attempt)
    l_actual = list(actual)
    #Compare how much do they have in common
    for i in l_actual:
        
    intersect = [i for i in l_attempt if i in l_actual]
    similarity = 100*len(intersect)/len(l_actual)
    return similarity


def main(argv): 
    '''Main function'''
    f = open('../data/TestOaksData.csv','r')
    g = open('../data/JustOaksData.csv','w')
    taxa = csv.reader(f)
    csvwrite = csv.writer(g)
    oaks = set()
    for row in taxa:
        print(row)
        print ("The genus is: ") 
        print(row[0] + '\n')
        if is_an_oak(row[0]):
            print('FOUND AN OAK!\n')
            csvwrite.writerow([row[0], row[1]])    

    return 0
    
#doctest.testmod()

## CODE ##

if (__name__ == "__main__"):
    status = main(sys.argv)
